<?xml version="1.0"?>
<!DOCTYPE modification SYSTEM "http://www.simplemachines.org/xml/modification">
<modification xmlns="http://www.simplemachines.org/xml/modification" xmlns:smf="http://www.simplemachines.org/">
	<license><!--
/**
 * User Mass Actions (uma)
 *
 * @package uma
 * @author emanuele
 * @copyright 2011 emanuele, Simple Machines
 * @license http://www.simplemachines.org/about/smf/license.php BSD
 *
 * @version 0.1.2
 */
--></license>
	<id>emanuele:user_mass_action</id>
	<version>0.1.2</version>

	<file name="$sourcedir/ManageMembers.php">
		<operation><!-- 1 -->
			<search position="replace"><![CDATA[
	// Are we performing a delete?
	if (isset($_POST['delete_members']) && !empty($_POST['delete']) && allowedTo('profile_remove_any'))
	{
		checkSession();

		// Clean the input.
		foreach ($_POST['delete'] as $key => $value)
		{
			$_POST['delete'][$key] = (int) $value;
			// Don't delete yourself, idiot.
			if ($value == $user_info['id'])
				unset($_POST['delete'][$key]);
		}

		if (!empty($_POST['delete']))
		{
			// Delete all the selected members.
			require_once($sourcedir . '/Subs-Members.php');
			deleteMembers($_POST['delete'], true);
		}
	}
]]></search>
			<add><![CDATA[
	loadLanguage('Profile');
	// Are we performing a mass action?
	if (isset($_POST['maction_on_members']) && isset($_POST['maction']) && !empty($_POST['delete']))
	{
		checkSession();
		// Clean the input if delete or ban.
		$members = array();
		foreach ($_POST['delete'] as $key => $value)
		{
			// Don't delete nor ban yourself, idiot.
			if ($_POST['maction'] != 'pgroup' && $_POST['maction'] != 'agroup')
			{
				if ($value != $user_info['id'])
					$members[] = $value;
			}
			else
				$members[] = $value;
		}

		if (!empty($members))
		{
			// Are we performing a delete?
			if ($_POST['maction'] == 'delete' && allowedTo('profile_remove_any'))
			{
				foreach ($members as $memID)
				{
					// Code duplication FTW!!!
					// From Profile-Actions.php, function deleteAccount2
					if ($_POST['maction_remove_type'] != 'none' && allowedTo('moderate_forum'))
					{
						// Include RemoveTopics - essential for this type of work!
						require_once($sourcedir . '/RemoveTopic.php');

						// First off we delete any topics the member has started - if they wanted topics being done.
						if ($_POST['maction_remove_type'] == 'topics')
						{
							// Fetch all topics started by this user within the time period.
							$request = $smcFunc['db_query']('', '
								SELECT t.id_topic
								FROM {db_prefix}topics AS t
								WHERE t.id_member_started = {int:selected_member}',
								array(
									'selected_member' => $memID,
								)
							);
							$topicIDs = array();
							while ($row = $smcFunc['db_fetch_assoc']($request))
								$topicIDs[] = $row['id_topic'];
							$smcFunc['db_free_result']($request);

							// Actually remove the topics.
							// !!! This needs to check permissions, but we'll let it slide for now because of moderate_forum already being had.
							removeTopics($topicIDs);
						}

						// Now delete the remaining messages.
						$request = $smcFunc['db_query']('', '
							SELECT m.id_msg
							FROM {db_prefix}messages AS m
								INNER JOIN {db_prefix}topics AS t ON (t.id_topic = m.id_topic
									AND t.id_first_msg != m.id_msg)
							WHERE m.id_member = {int:selected_member}',
							array(
								'selected_member' => $memID,
							)
						);
						// This could take a while... but ya know it's gonna be worth it in the end.
						while ($row = $smcFunc['db_fetch_assoc']($request))
						{
							if (function_exists('apache_reset_timeout'))
								@apache_reset_timeout();

							removeMessage($row['id_msg']);
						}
						$smcFunc['db_free_result']($request);
					}
				}

				// Delete all the selected members.
				require_once($sourcedir . '/Subs-Members.php');
				deleteMembers($members, true);
			}
			// Are we changing groups?
			elseif (($_POST['maction'] == 'pgroup' || $_POST['maction'] == 'agroup') && allowedTo('manage_membergroups'))
			{
				$groups = array('p', 'a');
				foreach($groups as $group){
					if ($_POST['maction'] == $group . 'group' && !empty($_POST['new_membergroup']))
					{
						$type = $group == 'p' ? 'force_primary' : 'only_additional';

						// Change all the selected members' group.
						require_once($sourcedir . '/Subs-Membergroups.php');
						if($_POST['new_membergroup'] != -1)
							addMembersToGroup($members, $_POST['new_membergroup'], $type, true);
						else
							removeMembersFromGroups($members,null,true);
					}
				}
			}
			// Are we banning?
			elseif(($_POST['maction'] == 'ban_names' || $_POST['maction'] == 'ban_mails' || $_POST['maction'] == 'ban_ips' || $_POST['maction'] == 'ban_names_mails') && allowedTo('manage_bans'))
			{
				require_once($sourcedir . '/ManageBans.php');

				$id_ban = $smcFunc['db_query']('', '
					SELECT id_ban_group
					FROM {db_prefix}ban_groups
					WHERE name = \'' . $modSettings['users_mass_action_ban_name'] . '\'
					LIMIT 1',
					array()
				);
				if ($smcFunc['db_num_rows']($id_ban) != 0)
					list($ban_group_id) = $smcFunc['db_fetch_row']($id_ban);
				else
					$ban_group_id = null;

				$smcFunc['db_free_result']($id_ban);

				$_REQUEST['bg'] = $ban_group_id;
				$mactions = $_POST['maction'] == 'ban_names_mails' ? array('ban_names', 'ban_mails') : array($_POST['maction']);

				foreach ($mactions as $maction) {
					$checkIPs = false;
					switch ($maction) {
						case 'ban_names':
							$what = 'member_name';
							$post_ban = 'user';
							$_POST['ban_suggestion'][] = 'user';
							$_POST['bantype'] = 'user_ban';
							break;
						case 'ban_mails':
							$what = 'email_address';
							$post_ban = 'email';
							$_POST['ban_suggestion'][] = 'email';
							$_POST['bantype'] = 'email_ban';
							break;
						case 'ban_ips':
							$checkIPs = true;
							$what = 'member_ip';
							$post_ban = !empty($ban_group_id) ? 'ip' : 'main_ip';
							$_POST['ban_suggestion'][] = 'main_ip';
							$_POST['bantype'] = 'ip_ban';
							break;
						default:
							return false;
					}
					$request = $smcFunc['db_query']('', '
						SELECT id_member, member_name, ' . $what . '
						FROM {db_prefix}members
						WHERE id_member IN ({array_int:id_members})',
						array(
							'id_members' => $members,
					));

					$_POST['expiration'] = 'never';
					$_POST['full_ban'] = 1;
					$_POST['reason'] = !empty($modSettings['users_mass_action_ban_name']) ? $modSettings['users_mass_action_ban_name'] : 'Mass ban';
					$_POST['ban_name'] = !empty($modSettings['users_mass_action_ban_name']) ? $modSettings['users_mass_action_ban_name'] : 'Mass ban';
					$_POST['notes'] = '';

					while ($row = $smcFunc['db_fetch_assoc']($request))
					{
						if ($checkIPs) {
							$ip_parts = ip2range($row[$what]);
							if (users_mass_action_checkExistingTriggerIP($ip_parts, $row[$what]))
								continue;

							$_POST['ip'] = $row[$what];
						}
						$_POST['add_new_trigger'] = !empty($ban_group_id) ? 1 : null;
						$_POST['add_ban'] = empty($ban_group_id) ? 1 : null;
						$_POST[$post_ban] = $row[$what];
						$_REQUEST['u'] = $row['id_member'];

						BanEdit();
						if(empty($ban_group_id)){
							$id_ban = $smcFunc['db_query']('', '
								SELECT id_ban_group
								FROM {db_prefix}ban_groups
								WHERE name = \'Mass bans\'
								LIMIT 1',
								array()
							);
							if($smcFunc['db_num_rows']($id_ban)!=0)
								list($ban_group_id) = $smcFunc['db_fetch_row']($id_ban);
							else
								$ban_group_id = null;
							$smcFunc['db_free_result']($id_ban);
						}
					}
					$smcFunc['db_free_result']($request);
				}
			}
		}
	}
]]></add>
		</operation>
		<operation><!-- 2 -->
			<search position="replace"><![CDATA[
		'additional_rows' => array(
			array(
				'position' => 'below_table_data',
				'value' => '<input type="submit" name="delete_members" value="' . $txt['admin_delete_members'] . '" onclick="return confirm(\'' . $txt['confirm_delete_members'] . '\');" class="button_submit" />',
				'style' => 'text-align: right;',
			),
		),
]]></search>
			<add><![CDATA[
		'additional_rows' => array(
			array(
				'position' => 'below_table_data',
				'value' => '
				<select name="maction" onchange="this.form.new_membergroup.disabled = (this.options[this.selectedIndex].value != \'pgroup\' && this.options[this.selectedIndex].value != \'agroup\');this.form.maction_remove_type.disabled = (this.options[this.selectedIndex].value != \'delete\');">
					<option value="">--------</option>
					<option value="delete">' . $txt['admin_delete_members'] . '</option>
					<option value="pgroup">' . $txt['admin_change_primary_membergroup'] . '</option>
					<option value="agroup">' . $txt['admin_change_secondary_membergroup'] . '</option>
					<option value="ban_names">' . $txt['admin_ban_usernames'] . '</option>
					<option value="ban_mails">' . $txt['admin_ban_useremails'] . '</option>
					<option value="ban_names_mails">' . $txt['admin_ban_usernames_and_emails'] . '</option>
					<option value="ban_ips">' . $txt['admin_ban_userips'] . '</option>
				</select>
				<select onchange="if(this.value==-1){if(!confirm(\'' . $txt['confirm_remove_membergroup'] . '\')){this.value=0;}}" name="new_membergroup" id="new_membergroup" disabled="disabled">' . 
				createGroupsList() . '</select>
				<select name="maction_remove_type" id="maction_remove_type" disabled="disabled">
					<option value="none">' . $txt['deleteAccount_none'] . '</option>
					<option value="posts">' . $txt['deleteAccount_all_posts'] . '</option>
					<option value="topics">' . $txt['deleteAccount_topics'] . '</option>
				</select>
				<input type="submit" name="maction_on_members" value="' . $txt['quick_mod_go'] . '" onclick="return confirm(\'' . $txt['quickmod_confirm'] . '\');" class="button_submit" />',
				'style' => 'text-align: right;',
			),
		),
]]></add>
		</operation>
	</file>
</modification>