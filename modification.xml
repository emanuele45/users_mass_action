<?xml version="1.0"?>
<!DOCTYPE modification SYSTEM "http://www.simplemachines.org/xml/modification">
<modification xmlns="http://www.simplemachines.org/xml/modification" xmlns:smf="http://www.simplemachines.org/">

	<id>emanuele:user_mass_action</id>
	<version>0.1.0</version>

	<file name="$sourcedir/ManageMembers.php">
		<operation><!-- 1 -->
			<search position="replace"><![CDATA[
	// Are we performing a delete?
	if (isset($_POST['delete_members']) && !empty($_POST['delete']) && allowedTo('profile_remove_any'))
	{
		checkSession();

		// Clean the input.
		foreach ($_POST['delete'] as $key => $value)
		{
			$_POST['delete'][$key] = (int) $value;
			// Don't delete yourself, idiot.
			if ($value == $user_info['id'])
				unset($_POST['delete'][$key]);
		}

		if (!empty($_POST['delete']))
		{
			// Delete all the selected members.
			require_once($sourcedir . '/Subs-Members.php');
			deleteMembers($_POST['delete'], true);
		}
	}
]]></search>
			<add><![CDATA[
	// Are we performing a mass action?
	if (isset($_POST['maction_on_members']) && isset($_POST['maction']) && !empty($_POST['delete']))
	{
		checkSession();

		// Clean the input.
		foreach ($_POST['delete'] as $key => $value)
		{
			$_POST['delete'][$key] = (int) $value;
			// Don't delete yourself, idiot.
			if ($value == $user_info['id'])
				unset($_POST['delete'][$key]);
		}
		// Are we performing a delete?
		if ($_POST['maction'] == 'delete' && allowedTo('profile_remove_any'))
		{
			if (!empty($_POST['delete']))
			{
				// Delete all the selected members.
				require_once($sourcedir . '/Subs-Members.php');
				deleteMembers($_POST['delete'], true);
			}
		}
		// Are we changing groups?
		if (($_POST['maction'] == 'pgroup' || $_POST['maction'] == 'agroup') && allowedTo('manage_membergroups'))
		{
			$groups = array('p', 'a');
			foreach($groups as $group){
				if ($_POST['maction'] == $group . 'group' && !empty($_POST['new_membergroup']))
				{
					if($group=='p')
						$type = 'force_primary';
					else
						$type = 'only_additional';

					if (!empty($_POST['delete']))
					{
						// Change all the selected members' group.
						require_once($sourcedir . '/Subs-Membergroups.php');
						if($_POST['new_membergroup'] != -1)
							addMembersToGroup($_POST['delete'], $_POST['new_membergroup'], $type, true);
						else
							removeMembersFromGroups($_POST['delete'],null,true);
					}
				}
			}
		}
		// Are we banning?
		if(($_POST['maction'] == 'ban_names' || $_POST['maction'] == 'ban_mails' || $_POST['maction'] == 'ban_ips') && allowedTo('manage_bans'))
		{
			require_once($sourcedir . '/ManageBans.php');

			$members = array();
			$_REQUEST['bg'] = !empty($modSettings['mass_bans']) ? $modSettings['mass_bans'] : null;

			// Set up an array of bans
			foreach ($_POST['delete'] as $key => $value)
				if ($value != $user_info['id'])
					// Don't ban yourself, idiot.
					$members[] = (int) $value;

			switch ($_POST['maction']) {
				case 'ban_names':
					$what = 'member_name';
					$post_ban = 'user';
					$_POST['ban_suggestion'][] = 'user';
					$_POST['bantype'] = 'user_ban';
					break;
				case 'ban_mails':
					$what = 'email_address';
					$post_ban = 'email';
					$_POST['ban_suggestion'][] = 'email';
					$_POST['bantype'] = 'email_ban';
					break;
				case 'ban_ips':
					$what = 'member_ip';
					$post_ban = !empty($modSettings['mass_bans']) ? 'ip' : 'main_ip';
					$_POST['ban_suggestion'][] = 'main_ip';
					$_POST['bantype'] = 'ip_ban';
					break;
				default:
					return false;
			}
			$request = $smcFunc['db_query']('', '
				SELECT id_member, member_name, ' . $what . '
				FROM {db_prefix}members
				WHERE id_member IN ({array_int:id_members})',
				array(
					'id_members' => $members,
			));
			$_POST['expiration'] = 'never';
			$_POST['full_ban'] = 1;
			$_POST['reason'] = 'Mass ban';
			$_POST['notes'] = '';
			if(!empty($modSettings['mass_bans']))
				$_POST['add_new_trigger'] = 1;
			else
				$_POST['add_ban'] = 1;
			
			while($row = $smcFunc['db_fetch_assoc']($request))
			{
				$_POST['ban_name'] = 'Mass bans';
				$_POST[$post_ban] = $row[$what];
				$_REQUEST['u'] = $row['id_member'];
				BanEdit();
				if(empty($modSettings['mass_bans'])){
					$request = $smcFunc['db_query']('', '
						SELECT id_ban_group
						FROM {db_prefix}ban_groups
						WHERE name = \'Mass bans\'
						LIMIT 1',
						array()
					);
					list($ban_group_id) = $smcFunc['db_fetch_row']($request);
					$smcFunc['db_free_result']($request);
					updateSettings(array('mass_bans' => $ban_group_id));
				}
			}
			$smcFunc['db_free_result']($request);
		}
	}
]]></add>
		</operation>
		<operation><!-- 2 -->
			<search position="replace"><![CDATA[
		'additional_rows' => array(
			array(
				'position' => 'below_table_data',
				'value' => '<input type="submit" name="delete_members" value="' . $txt['admin_delete_members'] . '" onclick="return confirm(\'' . $txt['confirm_delete_members'] . '\');" class="button_submit" />',
				'style' => 'text-align: right;',
			),
		),
]]></search>
			<add><![CDATA[
		'additional_rows' => array(
			array(
				'position' => 'below_table_data',
				'value' => '
				<select name="maction" onchange="this.form.new_membergroup.disabled = (this.options[this.selectedIndex].value != \'pgroup\' && this.options[this.selectedIndex].value != \'agroup\');">
					<option value="">--------</option>
					<option value="delete">' . $txt['admin_delete_members'] . '</option>
					<option value="pgroup">' . $txt['admin_change_primary_membergroup'] . '</option>
					<option value="agroup">' . $txt['admin_change_secondary_membergroup'] . '</option>
					<option value="ban_names">' . $txt['admin_ban_usernames'] . '</option>
					<option value="ban_mails">' . $txt['admin_ban_useremails'] . '</option>
					<option value="ban_ips">' . $txt['admin_ban_userips'] . '</option>
				</select>
				<select onchange="if(this.value==-1){if(!confirm(\'' . $txt['confirm_remove_membergroup'] . '\')){this.value=0;}}" name="new_membergroup" id="new_membergroup" disabled="disabled">' . 
				createGroupsList() . '</select>
				<input type="submit" name="maction_on_members" value="' . $txt['quick_mod_go'] . '" onclick="return confirm(\'' . $txt['quickmod_confirm'] . '\');" class="button_submit" />',
				'style' => 'text-align: right;',
			),
		),
]]></add>
		</operation>
		<operation><!-- 3 -->
			<search position="end" />
			<add><![CDATA[
function createGroupsList(){
	global $context, $smcFunc, $user_info, $sourcedir, $txt;

	require_once($sourcedir . '/Profile-Modify.php');
	loadLanguage('Profile');
	profileLoadGroups();

	// Better remove admin membergroup...and set it to a "remove all"
	$context['member_groups'][1] = array(
						'id' => -1,
						'name' => $txt['remove_all'],
						'is_primary' => 0,
	);
	$selects = '';
	// no primary is tricky...
	$context['member_groups'][0] = array(
						'id' => 0,
						'name' => '',
						'is_primary' => 1,
	);

	foreach($context['member_groups'] as $member_group){
		$selects .= '
									<option value="' . $member_group['id'] . '"' . ($member_group['is_primary'] ? ' selected="selected"' : '') . '>
										' . $member_group['name'] . '
									</option>';
	}
	return $selects;
}]]></add>
		</operation>
	</file>
</modification>